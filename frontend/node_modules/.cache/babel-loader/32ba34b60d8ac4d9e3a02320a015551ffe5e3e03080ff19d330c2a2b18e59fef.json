{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel\\\\Desktop\\\\inventory-tracker\\\\frontend\\\\src\\\\components\\\\StorageSystem\\\\StorageSystem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StorageSystem = ({\n  selectedGame,\n  onStorageSelect\n}) => {\n  _s();\n  const [storageSystems, setStorageSystems] = useState([]); // Removed defaults\n  const [selectedStorage, setSelectedStorage] = useState(\"\");\n  const [newStorage, setNewStorage] = useState(\"\");\n\n  // Handle selecting a storage system\n  const handleSelectStorage = event => {\n    const storage = event.target.value;\n    setSelectedStorage(storage);\n    onStorageSelect(storage); // Notify parent\n  };\n\n  // Handle adding a new storage system\n  const handleAddStorage = () => {\n    const trimmedStorage = newStorage.trim(); // Trim whitespace from the new storage\n    if (trimmedStorage && !storageSystems.includes(trimmedStorage)) {\n      setStorageSystems([...storageSystems, trimmedStorage]);\n      setNewStorage(\"\");\n    }\n  };\n\n  // Handle deleting a storage system\n  const handleDeleteStorage = storageName => {\n    setStorageSystems(storageSystems.filter(system => system !== storageName));\n    if (selectedStorage === storageName) {\n      setSelectedStorage(\"\"); // Clear selected storage if it was deleted\n      onStorageSelect(\"\"); // Notify parent\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Storage System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), selectedGame ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Game: \", selectedGame]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"storage-select\",\n        children: \"Choose a storage system:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"storage-select\",\n        value: selectedStorage,\n        onChange: handleSelectStorage,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select a Storage System--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), storageSystems.map((system, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: system,\n          children: system\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Storage System: \", selectedStorage || \"None\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a new storage system\",\n          value: newStorage,\n          onChange: e => setNewStorage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddStorage,\n          children: \"Add Storage System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"storage-systems-label\",\n        children: \"Available Storage Systems\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        \"aria-labelledby\": \"storage-systems-label\",\n        children: storageSystems.map((system, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [system, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteStorage(system),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select a game first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(StorageSystem, \"SYpFsyNhlDjIhGqc+p3TgLs6buo=\");\n_c = StorageSystem;\nexport default StorageSystem;\nvar _c;\n$RefreshReg$(_c, \"StorageSystem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","StorageSystem","selectedGame","onStorageSelect","_s","storageSystems","setStorageSystems","selectedStorage","setSelectedStorage","newStorage","setNewStorage","handleSelectStorage","event","storage","target","value","handleAddStorage","trimmedStorage","trim","includes","handleDeleteStorage","storageName","filter","system","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","index","type","placeholder","e","onClick","_c","$RefreshReg$"],"sources":["C:/Users/angel/Desktop/inventory-tracker/frontend/src/components/StorageSystem/StorageSystem.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst StorageSystem = ({ selectedGame, onStorageSelect }) => {\r\n    const [storageSystems, setStorageSystems] = useState([]); // Removed defaults\r\n    const [selectedStorage, setSelectedStorage] = useState(\"\");\r\n    const [newStorage, setNewStorage] = useState(\"\");\r\n\r\n    // Handle selecting a storage system\r\n    const handleSelectStorage = (event) => {\r\n        const storage = event.target.value;\r\n        setSelectedStorage(storage);\r\n        onStorageSelect(storage); // Notify parent\r\n    };\r\n\r\n    // Handle adding a new storage system\r\n    const handleAddStorage = () => {\r\n        const trimmedStorage = newStorage.trim(); // Trim whitespace from the new storage\r\n        if (trimmedStorage && !storageSystems.includes(trimmedStorage)) {\r\n            setStorageSystems([...storageSystems, trimmedStorage]);\r\n            setNewStorage(\"\");\r\n        }\r\n    };\r\n\r\n    // Handle deleting a storage system\r\n    const handleDeleteStorage = (storageName) => {\r\n        setStorageSystems(storageSystems.filter((system) => system !== storageName));\r\n        if (selectedStorage === storageName) {\r\n            setSelectedStorage(\"\"); // Clear selected storage if it was deleted\r\n            onStorageSelect(\"\"); // Notify parent\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Storage System</h2>\r\n            {selectedGame ? (\r\n                <>\r\n                    <p>Selected Game: {selectedGame}</p>\r\n\r\n                    {/* Dropdown to select a storage system */}\r\n                    <label htmlFor=\"storage-select\">Choose a storage system:</label>\r\n                    <select\r\n                        id=\"storage-select\"\r\n                        value={selectedStorage}\r\n                        onChange={handleSelectStorage}\r\n                    >\r\n                        <option value=\"\">--Select a Storage System--</option>\r\n                        {storageSystems.map((system, index) => (\r\n                            <option key={index} value={system}>\r\n                                {system}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <p>Selected Storage System: {selectedStorage || \"None\"}</p>\r\n\r\n                    {/* Input to add a new storage system */}\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Add a new storage system\"\r\n                            value={newStorage}\r\n                            onChange={(e) => setNewStorage(e.target.value)}\r\n                        />\r\n                        <button onClick={handleAddStorage}>Add Storage System</button>\r\n                    </div>\r\n\r\n                    {/* List of storage systems with delete buttons */}\r\n                    <h3 id=\"storage-systems-label\">Available Storage Systems</h3>\r\n                    <ul aria-labelledby=\"storage-systems-label\">\r\n                        {storageSystems.map((system, index) => (\r\n                            <li key={index}>\r\n                                {system}{\" \"}\r\n                                <button onClick={() => handleDeleteStorage(system)}>Delete</button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </>\r\n            ) : (\r\n                <p>Please select a game first.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StorageSystem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}